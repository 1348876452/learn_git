CROSS_COMPILE = riscv64-unknown-elf-
QEMU = qemu-system-riscv64
QFLAGS = -nographic  -smp 1  -machine spike -serial pty #-bios none


CC      :=${CROSS_COMPILE}gcc
AS      :=$(CROSS_COMPILE)as
LINK    :=$(CROSS_COMPILE)ld
OBJDUMP :=$(CROSS_COMPILE)objdump
OBJCOPY :=$(CROSS_COMPILE)objcopy
GDB     :=$(CROSS_COMPILE)gdb

debug_naem=
name=



CFLAGS  :=-fno-common -fno-builtin-printf -specs=htif_nano.specs -c
CFLAGS_O:= -static -specs=htif_nano.specs
VPATH=../src:../obj

src=$(wildcard *.c)
obj=$(patsubst %.c,%.o,$(src))
output=$(patsubst  %.c,%.riscv,$(src))
riscv=$(wildcard *.riscv)

$(name).riscv:$(name).o
	${CC} ${CFLAGS_O} $< -o $@
$(name).o:$(name).c $(name).S
	$(CC) $(CFLAGS) $<



.PHONY:printf clean qemu gdb

printf:
	@echo ''
	@echo ''
	@echo '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用方法<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<'
	@echo '一、 生成.riscv可执行文件的方法'
	@echo '     举例  make name=spectre-v1'
	@echo '     name可选的参数有：   '$(patsubst %.c,%,${src})
	@echo ''
	@echo ''
	@echo '二、 使用qemu+gdb调试'
	@echo '     打开qemu：make qemu debug_name= "调试程序"'
	@echo '     debug_name可选的参数有：  '$(patsubst %.riscv,%,$(riscv))
	@echo '     打开gdb：make gdb debug_name= "调试程序"'

qemu:
	$(QEMU) $(QFLAGS) -kernel $(debug_name).riscv -S -gdb tcp::1234

gdb:
	$(GDB) $(debug_name).riscv -ex 'target remote localhost:1234'

#while_loop:
#ifneq ($(NUM) , 0)
#	$(CC) $(CFLAGS_O) $(word $(shell expr $(NUM) - $(de)),$(obj)) -o $(word $(shell expr $(NUM) - $(de)),$(output))
#	@echo 'NUM='$(NUM)
#	NUM=$(shell expr $(NUM) - 1)
#	@echo 'NUM='$(NUM)
#	$(MAKE) while_loop
#endif
 



clean:
	rm -rf *.o *.riscv 


